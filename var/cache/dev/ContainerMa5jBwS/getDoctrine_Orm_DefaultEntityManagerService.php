<?php

namespace ContainerMa5jBwS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDoctrine_Orm_DefaultEntityManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'doctrine.orm.default_entity_manager' shared service.
     *
     * @return \Doctrine\ORM\EntityManager
     */
    public static function do($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['doctrine.orm.default_entity_manager'] = $container->createProxy('EntityManagerGhost614a58f', static fn () => \EntityManagerGhost614a58f::createLazyGhost(static fn ($proxy) => self::do($container, $proxy)));
        }

        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Proxy/Autoloader.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/src/Persistence/ObjectManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/EntityManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/EntityManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/src/Configuration.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Configuration.php';
        include_once \dirname(__DIR__, 4).'/vendor/psr/cache/src/CacheItemPoolInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/AdapterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/cache-contracts/CacheInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/psr/log/src/LoggerAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/ResettableInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/psr/log/src/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/ArrayAdapter.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/MappingDriver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Mapping/MappingDriver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/MappingDriverChain.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/NamingStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/UnderscoreNamingStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/QuoteStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Internal/SQLResultCasing.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/DefaultQuoteStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/EntityListenerResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Mapping/EntityListenerServiceResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Mapping/ContainerEntityListenerResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Repository/RepositoryFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Repository/RepositoryFactoryCompatibility.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Repository/ContainerRepositoryFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/ManagerConfigurator.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/src/Persistence/Mapping/Driver/ColocatedMappingDriver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/Driver/ReflectionBasedDriver.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Mapping/Driver/AttributeDriver.php';

        $a = new \Doctrine\ORM\Configuration();

        $b = new \Doctrine\Persistence\Mapping\Driver\MappingDriverChain();
        $b->addDriver(($container->privates['doctrine.orm.default_attribute_metadata_driver'] ??= new \Doctrine\ORM\Mapping\Driver\AttributeDriver([(\dirname(__DIR__, 4).'/src/Database/Entity')], true)), 'App\\Database\\Entity');

        $a->setEntityNamespaces(['App' => 'App\\Database\\Entity']);
        $a->setMetadataCache(new \Symfony\Component\Cache\Adapter\ArrayAdapter());
        $a->setQueryCache(($container->privates['cache.doctrine.orm.default.query'] ??= new \Symfony\Component\Cache\Adapter\ArrayAdapter()));
        $a->setResultCache(($container->privates['cache.doctrine.orm.default.result'] ??= new \Symfony\Component\Cache\Adapter\ArrayAdapter()));
        $a->setMetadataDriverImpl(new \Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver($b, new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'doctrine.ulid_generator' => ['privates', 'doctrine.ulid_generator', 'getDoctrine_UlidGeneratorService', true],
            'doctrine.uuid_generator' => ['privates', 'doctrine.uuid_generator', 'getDoctrine_UuidGeneratorService', true],
        ], [
            'doctrine.ulid_generator' => '?',
            'doctrine.uuid_generator' => '?',
        ])));
        $a->setProxyDir(($container->targetDir.''.'/doctrine/orm/Proxies'));
        $a->setProxyNamespace('Proxies');
        $a->setAutoGenerateProxyClasses(true);
        $a->setSchemaIgnoreClasses([]);
        $a->setClassMetadataFactoryName('Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ClassMetadataFactory');
        $a->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $a->setNamingStrategy(new \Doctrine\ORM\Mapping\UnderscoreNamingStrategy(0, true));
        $a->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $a->setEntityListenerResolver(new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver($container));
        $a->setLazyGhostObjectEnabled(true);
        $a->setRepositoryFactory(new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Database\\Repository\\AuthStatisticsRepository' => ['privates', 'App\\Database\\Repository\\AuthStatisticsRepository', 'getAuthStatisticsRepositoryService', true],
            'App\\Database\\Repository\\CLoginRepository' => ['privates', 'App\\Database\\Repository\\CLoginRepository', 'getCLoginRepositoryService', true],
            'App\\Database\\Repository\\CNumRepository' => ['privates', 'App\\Database\\Repository\\CNumRepository', 'getCNumRepositoryService', true],
            'App\\Database\\Repository\\DtPropertiesRepository' => ['privates', 'App\\Database\\Repository\\DtPropertiesRepository', 'getDtPropertiesRepositoryService', true],
            'App\\Database\\Repository\\ExpTableRepository' => ['privates', 'App\\Database\\Repository\\ExpTableRepository', 'getExpTableRepositoryService', true],
            'App\\Database\\Repository\\GuildRankRepository' => ['privates', 'App\\Database\\Repository\\GuildRankRepository', 'getGuildRankRepositoryService', true],
            'App\\Database\\Repository\\IPRepository' => ['privates', 'App\\Database\\Repository\\IPRepository', 'getIPRepositoryService', true],
            'App\\Database\\Repository\\IpLogRepository' => ['privates', 'App\\Database\\Repository\\IpLogRepository', 'getIpLogRepositoryService', true],
            'App\\Database\\Repository\\ItemBuyBackupRepository' => ['privates', 'App\\Database\\Repository\\ItemBuyBackupRepository', 'getItemBuyBackupRepositoryService', true],
            'App\\Database\\Repository\\ItemBuyRepository' => ['privates', 'App\\Database\\Repository\\ItemBuyRepository', 'getItemBuyRepositoryService', true],
            'App\\Database\\Repository\\ItemDetailRepository' => ['privates', 'App\\Database\\Repository\\ItemDetailRepository', 'getItemDetailRepositoryService', true],
            'App\\Database\\Repository\\ItemInfoRepository' => ['privates', 'App\\Database\\Repository\\ItemInfoRepository', 'getItemInfoRepositoryService', true],
            'App\\Database\\Repository\\LogRepository' => ['privates', 'App\\Database\\Repository\\LogRepository', 'getLogRepositoryService', true],
            'App\\Database\\Repository\\LoginDeletedRepository' => ['privates', 'App\\Database\\Repository\\LoginDeletedRepository', 'getLoginDeletedRepositoryService', true],
            'App\\Database\\Repository\\LoginRepository' => ['privates', 'App\\Database\\Repository\\LoginRepository', 'getLoginRepositoryService', true],
            'App\\Database\\Repository\\PrizeWinnerRepository' => ['privates', 'App\\Database\\Repository\\PrizeWinnerRepository', 'getPrizeWinnerRepositoryService', true],
            'App\\Database\\Repository\\RankRepository' => ['privates', 'App\\Database\\Repository\\RankRepository', 'getRankRepositoryService', true],
            'App\\Database\\Repository\\UserIpRepository' => ['privates', 'App\\Database\\Repository\\UserIpRepository', 'getUserIpRepositoryService', true],
        ], [
            'App\\Database\\Repository\\AuthStatisticsRepository' => '?',
            'App\\Database\\Repository\\CLoginRepository' => '?',
            'App\\Database\\Repository\\CNumRepository' => '?',
            'App\\Database\\Repository\\DtPropertiesRepository' => '?',
            'App\\Database\\Repository\\ExpTableRepository' => '?',
            'App\\Database\\Repository\\GuildRankRepository' => '?',
            'App\\Database\\Repository\\IPRepository' => '?',
            'App\\Database\\Repository\\IpLogRepository' => '?',
            'App\\Database\\Repository\\ItemBuyBackupRepository' => '?',
            'App\\Database\\Repository\\ItemBuyRepository' => '?',
            'App\\Database\\Repository\\ItemDetailRepository' => '?',
            'App\\Database\\Repository\\ItemInfoRepository' => '?',
            'App\\Database\\Repository\\LogRepository' => '?',
            'App\\Database\\Repository\\LoginDeletedRepository' => '?',
            'App\\Database\\Repository\\LoginRepository' => '?',
            'App\\Database\\Repository\\PrizeWinnerRepository' => '?',
            'App\\Database\\Repository\\RankRepository' => '?',
            'App\\Database\\Repository\\UserIpRepository' => '?',
        ])));

        $instance = ($lazyLoad->__construct(($container->services['doctrine.dbal.default_connection'] ?? $container->load('getDoctrine_Dbal_DefaultConnectionService')), $a, ($container->privates['doctrine.dbal.default_connection.event_manager'] ?? $container->load('getDoctrine_Dbal_DefaultConnection_EventManagerService'))) && false ?: $lazyLoad);

        (new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator([], []))->configure($instance);

        return $instance;
    }
}
